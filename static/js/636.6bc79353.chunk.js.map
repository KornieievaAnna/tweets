{"version":3,"file":"static/js/636.6bc79353.chunk.js","mappings":"iMAAaA,EAAW,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,KAAhB,E,wECEhBC,EAAOC,EAAAA,GAAAA,GAAH,6UAgBJC,EAAOD,EAAAA,GAAAA,IAAH,6GAQJE,EAAUF,EAAAA,GAAAA,IAAH,+GAOPG,EAAOH,EAAAA,GAAAA,KAAH,sRAWJI,EAASJ,EAAAA,GAAAA,KAAH,qTAcNK,EAASL,EAAAA,GAAAA,IAAH,qGAONM,EAAQN,EAAAA,GAAAA,IAAH,yJASLO,EAAOP,EAAAA,GAAAA,EAAH,qRAkBJQ,EAASR,EAAAA,GAAAA,OAAH,ulB,SC3BnB,EAhDkB,SAAC,GAAc,IAAZS,EAAW,EAAXA,KACbC,GAAWC,EAAAA,EAAAA,MACXC,EAAcH,EAAKG,YACzBC,QAAQC,IAAIF,GAqBZ,OACE,UAACb,EAAD,YACE,SAACE,EAAD,CAAMc,I,y+BAAWC,IAAI,UACrB,SAACd,EAAD,CAASa,IAAKE,EAASD,IAAI,aAC3B,SAACb,EAAD,KACA,SAAC,EAAD,KACA,0BACE,SAACE,EAAD,CAAQU,IAAKN,EAAKS,OAAQF,IAAI,SAASG,OAAQ,GAAIC,MAAO,QAE5D,UAACd,EAAD,YACE,UAACC,EAAD,WAAOE,EAAKY,OAAOC,eAAe,SAAlC,cACA,UAACf,EAAD,WAAOE,EAAKc,UAAUD,eAAe,SAArC,oBAEF,SAACd,EAAD,CACEgB,KAAK,SACLC,MAAO,CAAEC,gBAAiBd,GAAe,WACzCe,QAnCe,WACnBjB,GACEkB,EAAAA,EAAAA,GACEhB,EACI,CACEiB,OAAQpB,EAAKqB,GACbC,UAAWtB,EAAKsB,UAAY,EAC5BnB,aAAa,GAEf,CACEiB,OAAQpB,EAAKqB,GACbC,UAAWtB,EAAKsB,UAAY,EAC5BnB,aAAa,KAIvBC,QAAQC,IAAI,MACb,EAeG,SAKGF,GAAc,6CAAiB,6CAIvC,ECtBD,EAnCe,WACb,IAAMoB,GAAgBC,EAAAA,EAAAA,SAAO,GACvBvB,GAAWC,EAAAA,EAAAA,OAEjBuB,EAAAA,EAAAA,YAAU,WACJF,EAAcG,SAChBzB,GAAS0B,EAAAA,EAAAA,MAEXJ,EAAcG,SAAU,CAEzB,GAAE,CAACzB,IAEJ,IAAMb,GAAQwC,EAAAA,EAAAA,IAAY1C,GAG1B,OAFAkB,QAAQC,IAAIjB,IAGV,8BACGA,EAAMyC,OAAS,IACd,eACEb,MAAO,CACLc,QAAS,OACTC,eAAgB,SAChBC,SAAU,OACVC,IAAK,QALT,SAQG7C,EAAM8C,KAAI,SAAAlC,GAAI,OACb,SAAC,EAAD,CAAyBA,KAAMA,GAAfA,EAAKqB,GADR,OAOxB,C","sources":["redux/selector.js","components/TweetCard/TweetCard.styled.js","components/TweetCard/TweetCard.js","pages/Tweets.js"],"sourcesContent":["export const getUsers = state => state.users.items;\n\n\n\n","import styled from 'styled-components';\n\nexport const Card = styled.li`\n  position: relative;\n  width: 380px;\n  height: 460px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  width: 76px;\n  height: 22px;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const Picture = styled.img`\n  position: absolute;\n  width: 308px;\n  height: 168px;\n  left: 36px;\n  top: 28px;\n`;\nexport const Band = styled.span`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\nexport const Сircle = styled.span`\n  position: absolute;\n  width: 80px;\n  height: 80px;\n  left: 150px;\n  top: 178px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n  border-radius: 50%;\n`;\n\nexport const Avatar = styled.img`\n  position: absolute;\n  left: 159px;\n  top: 187px;\n  border-radius: 50%;\n`;\n\nexport const Stats = styled.div`\n  display: flex;\n  padding-top: 284px;\n  text-align: center;\n  flex-direction: column;\n  align-items: center;\n  gap: 16px;\n`;\n\nexport const Text = styled.p`\n// position: absolute;\nwidth: 214px;\nheight: 24px;\n// left: 124px;\n// top: 284px;\ngap: 16px;\n\ntext-align: center\nfont-family: 'Montserrat';\nfont-weight: 500;\nfont-size: 20px;\nline-height: 24px;\ntext-transform: uppercase;\n\ncolor: #EBD8FF;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 14px 28px;\n  gap: 6px;\n\n  position: absolute;\n  width: 196px;\n  height: 50px;\n  left: 92px;\n  top: 374px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n\n  font-family: 'Montserrat';\n  font-style: normal;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  /* identical to box height */\n\n  text-transform: uppercase;\n\n  /* Landing/button text color */\n\n  color: #373737;\n`;\n\n\n// export const LoaderStyled = styled.div``;\n// export const LoaderStyled = styled.div``;\n// export const LoaderStyled = styled.div``;\n// export const LoaderStyled = styled.div``;\n","import logo from '../images/logo.png';\nimport picture from '../images/picture.png';\nimport {\n  Card,\n  Logo,\n  Picture,\n  Band,\n  Сircle,\n  Avatar,\n  Stats,\n  Text,\n  Button,\n} from './TweetCard.styled';\n\nimport { useDispatch } from 'react-redux';\nimport { updateUser } from 'redux/operations';\n\nconst TweetCard = ({ user }) => {\n  const dispatch = useDispatch();\n  const isFollowing = user.isFollowing;\n  console.log(isFollowing);\n\n  const handleСhange = () => {\n    dispatch(\n      updateUser(\n        isFollowing\n          ? {\n              userId: user.id,\n              followers: user.followers - 1,\n              isFollowing: false,\n            }\n          : {\n              userId: user.id,\n              followers: user.followers + 1,\n              isFollowing: true,\n            }\n      )\n    );\n    console.log('hfm');\n  };\n\n  return (\n    <Card>\n      <Logo src={logo} alt=\"logo\" />\n      <Picture src={picture} alt=\"picture\" />\n      <Band></Band>\n      <Сircle></Сircle>\n      <div>\n        <Avatar src={user.avatar} alt=\"avatar\" height={62} width={62} />\n      </div>\n      <Stats>\n        <Text>{user.tweets.toLocaleString('en-US')} tweets</Text>\n        <Text>{user.folloewrs.toLocaleString('en-US')} folloewrs</Text>\n      </Stats>\n      <Button\n        type=\"button\"\n        style={{ backgroundColor: isFollowing && '#5cd3a8' }}\n        onClick={handleСhange}\n      >\n        {isFollowing ? <>Following</> : <>Follow</>}\n      </Button>\n    </Card>\n  );\n};\n\nexport default TweetCard;\n","import { useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchUsers } from 'redux/operations';\nimport { getUsers } from 'redux/selector';\nimport TweetCard from 'components/TweetCard/TweetCard';\n\nconst Tweets = () => {\n  const isFirstRender = useRef(true);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (isFirstRender.current) {\n      dispatch(fetchUsers());\n    }\n    isFirstRender.current = false;\n    return;\n  }, [dispatch]);\n\n  const users = useSelector(getUsers);\n  console.log(users);\n\n  return (\n    <>\n      {users.length > 0 && (\n        <ul\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            flexWrap: 'wrap',\n            gap: '20px',\n          }}\n        >\n          {users.map(user => (\n            <TweetCard key={user.id} user={user} />\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Tweets;\n"],"names":["getUsers","state","users","items","Card","styled","Logo","Picture","Band","Сircle","Avatar","Stats","Text","Button","user","dispatch","useDispatch","isFollowing","console","log","src","alt","picture","avatar","height","width","tweets","toLocaleString","folloewrs","type","style","backgroundColor","onClick","updateUser","userId","id","followers","isFirstRender","useRef","useEffect","current","fetchUsers","useSelector","length","display","justifyContent","flexWrap","gap","map"],"sourceRoot":""}